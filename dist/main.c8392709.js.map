{"version":3,"sources":["../node_modules/three/build/three.module.js","../node_modules/three/examples/jsm/controls/OrbitControls.js","4.粒子特效/main.js","C:/Users/Administrator/AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","l","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","legacyMode","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","_this2","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","options","_this3","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","count","_this9","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix$1","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","widthSegments","heightSegments","depthSegments","_this16","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","fov","aspect","_this19","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","mode","setMode","drawArrays","renderInstances","primcount","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","disposeTexture","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_super33","_this25","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super34","_this26","isMeshDepthMaterial","_Material4","_super35","_this27","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_shadowSide","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_equationToGL","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_wrappingToGL","_filterToGL","_compareToGL","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super36","_this28","isArrayCamera","Group","_Object3D4","_super37","_this29","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_super49","_this40","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","indexArray","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","isWebGPURenderer","culled","_Material6","_super50","_this41","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super51","_this42","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super52","_this43","LineLoop","_Line2","_super53","_this44","_Material7","_super54","_this45","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super55","_this46","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super56","video","_this47","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super57","_this48","CompressedTexture","_Texture8","_super58","_this49","CompressedArrayTexture","_CompressedTexture","_super59","_this50","CompressedCubeTexture","_CompressedTexture2","_super60","_this51","isCompressedCubeTexture","CanvasTexture","_Texture9","_super61","_this52","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_super62","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","_this53","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super63","aRadius","_this54","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super64","curveType","_this55","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super65","_this56","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super66","_this57","isCubicBezierCurve3","LineCurve","_Curve5","_super67","_this58","isLineCurve","LineCurve3","_Curve6","_super68","_this59","isLineCurve3","QuadraticBezierCurve","_Curve7","_super69","_this60","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super70","_this61","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super71","_this62","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super72","_this63","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super73","_this64","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super74","phiStart","phiLength","_this65","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super75","capSegments","radialSegments","_this66","CircleGeometry","_BufferGeometry4","_super76","thetaStart","thetaLength","_this67","segment","CylinderGeometry","_BufferGeometry5","_super77","radiusTop","radiusBottom","openEnded","_this68","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super78","_this69","PolyhedronGeometry","_BufferGeometry6","_super79","_this70","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super80","_this71","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super81","thresholdAngle","_this72","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super82","_this73","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super83","_this74","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super84","_this75","OctahedronGeometry","_PolyhedronGeometry3","_super85","_this76","RingGeometry","_BufferGeometry9","_super86","innerRadius","outerRadius","thetaSegments","phiSegments","_this77","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super87","_this78","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super88","_this79","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super89","_this80","TorusGeometry","_BufferGeometry12","_super90","tube","tubularSegments","_this81","TorusKnotGeometry","_BufferGeometry13","_super91","_this82","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super92","_this83","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super93","_this84","edges","o","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super94","_this85","RawShaderMaterial","_ShaderMaterial","_super95","_this86","_Material9","_super96","_this87","_MeshStandardMaterial","_super97","_this88","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_super98","_this89","_Material11","_super99","_this90","_Material12","_super100","_this91","_Material13","_super101","_this92","_Material14","_super102","_this93","_LineBasicMaterial","_super103","_this94","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super104","_this95","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super105","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super106","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super107","ColorKeyframeTrack","_KeyframeTrack2","_super108","NumberKeyframeTrack","_KeyframeTrack3","_super109","QuaternionLinearInterpolant","_Interpolant4","_super110","QuaternionKeyframeTrack","_KeyframeTrack4","_super111","StringKeyframeTrack","_KeyframeTrack5","_super112","VectorKeyframeTrack","_KeyframeTrack6","_super113","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super114","response","_this96","_wrapNativeSuper","FileLoader","_Loader","_super115","_this97","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super116","CompressedTextureLoader","_Loader3","_super117","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super118","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super119","urls","DataTextureLoader","_Loader6","_super120","texData","TextureLoader","_Loader7","_super121","Light","_Object3D11","_super122","_this98","HemisphereLight","_Light","_super123","_this99","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super124","_this100","isSpotLightShadow","SpotLight","_Light2","_super125","_this101","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super126","_this102","_cubeDirections","_cubeUps","PointLight","_Light3","_super127","_this103","DirectionalLightShadow","_LightShadow3","_super128","_this104","isDirectionalLightShadow","DirectionalLight","_Light4","_super129","_this105","AmbientLight","_Light5","_super130","_this106","RectAreaLight","_Light6","_super131","_this107","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super132","_this108","MaterialLoader","_Loader8","_super133","_this109","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super134","_this110","BufferGeometryLoader","_Loader9","_super135","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super136","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super137","_this111","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super138","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super139","_this112","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super140","_this113","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super141","_this114","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super142","_this115","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super143","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super144","_this117","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super145","_this118","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super146","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","_super147","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super148","_this121","GridHelper","_LineSegments2","_super149","_this122","PolarGridHelper","_LineSegments3","_super150","sectors","rings","_this123","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super151","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super152","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super153","_this126","Box3Helper","_LineSegments6","_super154","_this127","PlaneHelper","_Line3","_super155","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super156","headLength","headWidth","_this129","setDirection","setColor","AxesHelper","_LineSegments7","_super157","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","valueOf","_changeEvent","_startEvent","_endEvent","_plane","TILT_LIMIT","OrbitControls","touchAction","cursor","minDistance","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","listenToKeyEvents","onKeyDown","stopListenToKeyEvents","saveState","STATE","quat","quatInverse","lastPosition","lastQuaternion","lastTargetPosition","twoPI","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","performCursorZoom","clampDistance","zoomChanged","newRadius","prevRadius","radiusDelta","dollyDirection","mouseBefore","mouse","mouseAfter","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","updateMouseParameters","rect","getBoundingClientRect","clientX","clientY","dist","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","ctrlKey","metaKey","shiftKey","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","pointer","passive","THREE","_interopRequireWildcard","_OrbitControls","_getRequireWildcardCache","nodeInterop","cacheBabelInterop","cacheNodeInterop","__esModule","default","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","innerWidth","innerHeight","createPoints","textureUrl","pointsCount","pointsMaterialSize","particlesGeometry","textureLoader","pointsMaterial","points2","points3","appendChild","controls","axesHelper","clock","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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","file":"main.c8392709.js","sourceRoot":"..\\src","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '159';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: \"updateRange\" is deprecated and removed in r169. Use \"addUpdateRange()\" instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // deprecated\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// deprecated\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: \"updateRange\" is deprecated and removed in r169. Use \"addUpdateRange()\" instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.isWebGPURenderer ? WebGPUCoordinateSystem : WebGLCoordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMouseParameters( event ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst x = event.clientX - rect.left;\n\t\t\tconst y = event.clientY - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nconst scene = new THREE.Scene();\r\n\r\nconst camera = new THREE.PerspectiveCamera(\r\n  75,\r\n  window.innerWidth / window.innerHeight,\r\n  0.1,\r\n  40\r\n);\r\ncamera.position.set(0, 0, 40);\r\nscene.add(camera);\r\n\r\nconst createPoints = (\r\n  textureUrl,\r\n  pointsCount = 5000,\r\n  pointsMaterialSize = 0.5\r\n) => {\r\n  const particlesGeometry = new THREE.BufferGeometry();\r\n  // 想要创建的points数量\r\n  const count = pointsCount;\r\n  // 设置缓冲区数组\r\n  const positions = new Float32Array(count * 3);\r\n  // 设置粒子的每个顶点的颜色\r\n  const colors = new Float32Array(count * 3);\r\n\r\n  // 设置顶点\r\n  for (let i = 0; i < count * 3; i++) {\r\n    colors[i] = Math.random();\r\n    positions[i] = (Math.random() - 0.5) * 100;\r\n  }\r\n\r\n  // 设置顶点\r\n  particlesGeometry.setAttribute(\r\n    'position',\r\n    new THREE.BufferAttribute(positions, 3)\r\n  );\r\n\r\n  // 设置颜色\r\n  particlesGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n\r\n  // 载入纹理\r\n  const textureLoader = new THREE.TextureLoader();\r\n  const texture = textureLoader.load(`./textures/particles/${textureUrl}.png`);\r\n  // 设置材质\r\n  const pointsMaterial = new THREE.PointsMaterial();\r\n  pointsMaterial.color.set(0xfff000);\r\n  pointsMaterial.size = pointsMaterialSize;\r\n  pointsMaterial.alphaMap = texture;\r\n  pointsMaterial.map = texture;\r\n  pointsMaterial.transparent = true;\r\n  pointsMaterial.depthWrite = false;\r\n  pointsMaterial.sizeAttenuation = true; // 指定点的大小是否因相机深度而衰减。（仅限透视摄像头。）默认为true。\r\n  // 设置启用顶点颜色\r\n  pointsMaterial.vertexColors = true;\r\n\r\n  const points = new THREE.Points(particlesGeometry, pointsMaterial);\r\n  scene.add(points);\r\n  return points;\r\n};\r\n\r\nconst points = createPoints('xh', 2000, 1);\r\nconst points2 = createPoints('xh2', 3000, 0.8);\r\nconst points3 = createPoints('xh3', 2000, 0.7);\r\n\r\nconst renderer = new THREE.WebGLRenderer();\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ndocument.body.appendChild(renderer.domElement);\r\n\r\nconst controls = new OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true;\r\n\r\nconst axesHelper = new THREE.AxesHelper(5);\r\nscene.add(axesHelper);\r\n\r\nconst clock = new THREE.Clock();\r\nconst render = () => {\r\n  const time = clock.getElapsedTime();\r\n  points.rotation.x = time * 0.09;\r\n  points2.rotation.x = time * 0.07;\r\n  points2.rotation.y = time * 0.07;\r\n  points3.rotation.x = time * 0.05;\r\n  points3.rotation.x = time * 0.05;\r\n  renderer.render(scene, camera);\r\n  controls.update();\r\n  requestAnimationFrame(render);\r\n};\r\n\r\nrender();\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}